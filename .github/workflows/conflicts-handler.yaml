name: Automate After Merge

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  automate-after-merge:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
    env:
      LATEST_MAIN_VERSION: ''
      MY_VERSION: ''
      MY_NEW_VERSION: ''
      MY_FILE: ''
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3 

      - name: Get Versions
        id: get-versions
        run: |
          echo "LATEST_MAIN_VERSION=$(git show main:flyway/version.log | grep -oE '[0-9]+\.[0-9]+' | tail -n 1)" >> "$GITHUB_OUTPUT"
          echo "MY_VERSION=$(git show flyway/version.log | grep -oE '[0-9]+\.[0-9]+' | tail -n 1)" >> "$GITHUB_OUTPUT"

      - name: Set new Version
        id: set-new-versions
        run: |
          echo "${{ steps.get-versions.outputs.LATEST_MAIN_VERSION }}"
          echo "${{ steps.get-versions.outputs.MY_VERSION }}"
          echo "${{ steps.get-versions.outputs.MY_NEW_VERSION }}"
          echo "MY_NEW_VERSION=$(awk "BEGIN {printf \"%.3f\n\", ${{ steps.get-versions.outputs.MY_VERSION }} + 0.001}")" >> "$GITHUB_OUTPUT"

      - name: Log Versions
        run: |
          echo "${{ steps.get-versions.outputs.LATEST_MAIN_VERSION }}"
          echo "${{ steps.get-versions.outputs.MY_VERSION }}"
          echo "${{ steps.set-new-versions.outputs.MY_NEW_VERSION }}"